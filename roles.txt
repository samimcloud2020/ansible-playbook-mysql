what is Ansible Galaxy?
Ansible Galaxy is Ansible’s official hub for sharing Ansible content.
You can jump-start your automation project by using Galaxy with great content from the Ansible community. 
Galaxy provides pre-packaged units of work known to Ansible as Roles.
------------------------------------------------------------------------------------------
What are the Ansible Roles?
Role enables the sharing and reuse of Ansible tasks. 
It contains Ansible playbook tasks plus all the supporting files, variables, templates, and handlers needed to run the tasks.
A Role is a complete unit of automation that can be reused and shared.
--------------------------------------------------------------------------------------------
Why Ansible Roles?
Roles play an important part in breaking the complex Ansible Playbooks,
the core component of any Ansible configuration, into easy to reuse multiple files. 
With Ansible Roles you can:
-----------------------------------------------------------------------------------
Bundle automation content and make it reusable
Group multiple sets of tasks in an effective manner
Modify and reduce syntax errors
Release modules independent of Ansible Core releases
Ansible Roles are equivalent to modules in Puppet and Cookbooks in Chef.
-------------------------------------------------------------------------------------
The ‘ansible-galaxy’ commands
The ‘ansible-galaxy’ command comes bundled with Ansible. You can create, install, and remove Roles using commands.
It can be used for the following actions:

Init: A Role requires various directories and main.yml files. 
Using the init command you can initialize the base structure of a new Role and save the time required to create directories and files.
Info: With the info command you can see more details about a specific Role.
Install: You can download and install Roles from the Galaxy website using the install command. (Works similar to ‘pip install’ in python)
List: Use list to show the name and version of each Role installed in the roles_path. (Works similar to ‘pip freeze’ in python).
Remove: Use remove to delete a Role from roles_path.
Ansible Role Structure and its significance
------------------------------------------------------------------------------------------
README.md – This is the Readme file for the role. Put the detailed information of 
all the input parameters for the role and example yml in the readme file.

tasks - You can enlist all tasks to be executed by the Role in tasks.
Main.yml of the tasks is the entry point for the Role (this is where the execution starts). 
One can include other files into this file.

handlers - Contains handlers, which may be used by this role or even anywhere outside this role.

defaults - Default variables for the Role.

vars - Other variables which are of more priority than the defaults for Role.

files - This contains the files which can be deployed via Role.

templates - Contains templates which can be deployed via Role.

meta - You can define metadata for the Role in meta. Other Role dependencies, if any, should be mentioned in this file.

tests – CI tests to be executed.

library - Embedding Modules and Plugins in Roles (Not created by init command). 
If required one can define custom module in python in this folder and use it in the tasks.

---------------------------------------------------------------------------------

root@ip-172-31-82-195:~# mkdir dir1
root@ip-172-31-82-195:~# cd dir1
root@ip-172-31-82-195:~/dir1# mkdir roles
root@ip-172-31-82-195:~/dir1# cd roles
root@ip-172-31-82-195:~/dir1/roles# vim roles.yml
root@ip-172-31-82-195:~/dir1/roles# cd ..

root@ip-172-31-82-195:~/dir1# cd roles
root@ip-172-31-82-195:~/dir1/roles# ansible-galaxy init package
- Role package was created successfully
root@ip-172-31-82-195:~/dir1/roles# ls
package  roles.yml
root@ip-172-31-82-195:~/dir1/roles# cd package
root@ip-172-31-82-195:~/dir1/roles/package# ls
README.md  defaults  handlers  meta  tasks  tests  vars
root@ip-172-31-82-195:~/dir1/roles/package# cd tests
root@ip-172-31-82-195:~/dir1/roles/package/tests# vim main.yml
root@ip-172-31-82-195:~/dir1/roles/package/tests# cd ..
root@ip-172-31-82-195:~/dir1/roles/package# cd ..
root@ip-172-31-82-195:~/dir1/roles# cd ..
root@ip-172-31-82-195:~/dir1# tree
.
└── roles
    ├── package
    │   ├── README.md
    │   ├── defaults
    │   │   └── main.yml
    │   ├── handlers
    │   │   └── main.yml
    │   ├── meta
    │   │   └── main.yml
    │   ├── tasks
    │   │   └── main.yml
    │   ├── tests
    │   │   ├── inventory
    │   │   ├── main.yml
    │   │   └── test.yml
    │   └── vars
    │       └── main.yml
    └── roles.yml

8 directories, 10 files
root@ip-172-31-82-195:~/dir1# cd roles

root@ip-172-31-82-195:~/dir1/roles# ls
package  roles.yml
root@ip-172-31-82-195:~/dir1/roles# cd ..

root@ip-172-31-82-195:~/dir1# tree
.
└── roles
    ├── package
    │   ├── README.md
    │   ├── defaults
    │   │   └── main.yml
    │   ├── handlers
    │   │   └── main.yml
    │   ├── meta
    │   │   └── main.yml
    │   ├── tasks
    │   │   └── main.yml
    │   ├── tests
    │   │   ├── inventory
    │   │   ├── main.yml
    │   │   └── test.yml
    │   └── vars
    │       └── main.yml
    └── roles.yml

8 directories, 10 files

root@ip-172-31-82-195:~/dir1/roles# ansible-playbook -i inventory roles.yml
[WARNING]: Unable to parse /root/dir1/roles/inventory as an inventory source
[WARNING]: No inventory was parsed, only implicit localhost is available
[WARNING]: provided hosts list is empty, only localhost is available. Note that the implicit localhost does not match 'all'

PLAY [localhost] **************************************************************************************************************************************

TASK [Gathering Facts] ********************************************************************************************************************************
ok: [localhost]

PLAY RECAP ********************************************************************************************************************************************
localhost                  : ok=1    changed=0    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   

root@ip-172-31-82-195:~/dir1/roles# 


root@ip-172-31-82-195:~/dir1/roles# cat roles.yml
---
- hosts: localhost
  become: true
  roles:
    - /root/dir1/roles/package
    
    
root@ip-172-31-82-195:~/dir1/roles# cd package
root@ip-172-31-82-195:~/dir1/roles/package# cd tests
root@ip-172-31-82-195:~/dir1/roles/package/tests# cat main.yml
---
# tasks file for nginx
- name: Install Nginx
  ansible.builtin.package:
    name: nginx 
    state: latest
- name: Start Nginx Service
  ansible.builtin.service:
    name: nginx 
    state: started
